name: Release Build
on:
  push:
    tags: ['v*']

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pyinstaller>=6.0
        
    - name: Build Windows executable
      run: pyinstaller docx2shelf_gui.spec --clean --noconfirm

    - name: Create self-signed certificate for code signing
      shell: powershell
      run: |
        # Create a self-signed certificate for code signing
        $cert = New-SelfSignedCertificate -Type CodeSigningCert -Subject "CN=Docx2Shelf Contributors, O=Docx2Shelf, C=US" -KeyAlgorithm RSA -KeyLength 2048 -Provider "Microsoft Enhanced RSA and AES Cryptographic Provider" -KeyExportPolicy Exportable -KeyUsage DigitalSignature -CertStoreLocation Cert:\CurrentUser\My

        # Export certificate to PFX file (without password for simplicity)
        $certPwd = ConvertTo-SecureString -String "TempPassword123!" -Force -AsPlainText
        $cert | Export-PfxCertificate -FilePath "codesign.pfx" -Password $certPwd

        echo "Certificate created and exported"

    - name: Sign Windows executable
      shell: powershell
      run: |
        # Sign the main executable
        $signtool = "${env:ProgramFiles(x86)}\Windows Kits\10\bin\10.0.22621.0\x64\signtool.exe"
        if (-not (Test-Path $signtool)) {
          $signtool = "${env:ProgramFiles}\Windows Kits\10\bin\10.0.22621.0\x64\signtool.exe"
        }
        if (-not (Test-Path $signtool)) {
          # Try to find signtool in any available SDK version
          $signtool = Get-ChildItem "${env:ProgramFiles(x86)}\Windows Kits\10\bin\*\x64\signtool.exe" | Sort-Object FullName -Descending | Select-Object -First 1 -ExpandProperty FullName
        }

        if (Test-Path $signtool) {
          Write-Host "Found signtool at: $signtool"
          & $signtool sign /f codesign.pfx /p "TempPassword123!" /fd SHA256 /t http://timestamp.digicert.com /v "dist\Docx2Shelf\Docx2Shelf.exe"
          Write-Host "Executable signed successfully"
        } else {
          Write-Host "SignTool not found, skipping code signing"
        }
      
    - name: Upload artifacts temporarily
      uses: actions/upload-artifact@v4
      with:
        name: windows-executable
        path: dist/Docx2Shelf/

    - name: Upload to existing release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/Docx2Shelf/*
        append_body: false
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
