name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-test-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Run tests
        run: pytest -q
      - name: Build packages
        run: python -m build
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Docx2Shelf ${{ github.ref_name }}
          body_path: RELEASE_NOTES_${{ github.ref_name }}.md
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          TAG="${GITHUB_REF_NAME}"
          DATE=$(date -u +%Y-%m-%d)
          NOTES_FILE="RELEASE_NOTES_${TAG}.md"
          if [ -f "$NOTES_FILE" ]; then
            NEW_SECTION="## ${TAG} - ${DATE}

$(cat "$NOTES_FILE")

"
          else
            NEW_SECTION="## ${TAG} - ${DATE}

See GitHub release notes.

"
          fi
          git fetch origin main
          git checkout main || git checkout -B main
          git pull --ff-only origin main || true
          if [ -f CHANGELOG.md ]; then
            printf "%s%s" "$NEW_SECTION" "$(cat CHANGELOG.md)" > CHANGELOG.md
          else
            printf "# Changelog

%s" "$NEW_SECTION" > CHANGELOG.md
          fi
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "chore(changelog): update for ${TAG}" || echo "No changes to commit"
          git push origin main

