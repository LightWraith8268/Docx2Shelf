openapi: 3.0.3
info:
  title: Docx2Shelf Enterprise API
  description: |
    Enterprise-grade REST API for Docx2Shelf EPUB converter.

    ## Authentication
    API uses API key authentication. Include your API key in the `X-API-Key` header.

    ## Rate Limiting
    API calls are rate limited per API key. Default limits:
    - 60 requests per minute
    - Burst size of 10 requests

    Rate limit information is included in response headers:
    - `X-RateLimit-Limit`: Request limit per minute
    - `X-RateLimit-Remaining`: Remaining requests in current window
    - `X-RateLimit-Reset`: Unix timestamp when rate limit window resets

    ## Webhooks
    Configure webhook endpoints to receive real-time notifications about job status changes.
    Webhook payloads include HMAC-SHA256 signature in `X-Docx2Shelf-Signature` header.

  version: 1.2.6
  contact:
    name: Docx2Shelf Support
    email: support@docx2shelf.io
    url: https://github.com/docx2shelf/docx2shelf
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.docx2shelf.io/v1
    description: Production server
  - url: https://staging-api.docx2shelf.io/v1
    description: Staging server
  - url: http://localhost:8080/api/v1
    description: Local development server

security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      summary: Health check
      description: Check API health status
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        '503':
          description: API is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

  /metrics:
    get:
      summary: Prometheus metrics
      description: Get Prometheus-formatted metrics
      security: []
      responses:
        '200':
          description: Metrics in Prometheus format
          content:
            text/plain:
              schema:
                type: string

  /jobs:
    get:
      summary: List conversion jobs
      description: Get list of conversion jobs with optional filtering
      parameters:
        - name: status
          in: query
          description: Filter by job status
          schema:
            type: string
            enum: [pending, running, completed, failed]
        - name: limit
          in: query
          description: Maximum number of jobs to return
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: offset
          in: query
          description: Number of jobs to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: List of conversion jobs
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConversionJob'
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

    post:
      summary: Create conversion job
      description: Create a new DOCX to EPUB conversion job
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: DOCX file to convert
                title:
                  type: string
                  description: Book title
                author:
                  type: string
                  description: Book author
                priority:
                  type: integer
                  minimum: 1
                  maximum: 10
                  default: 5
                  description: Job priority (1-10, higher = more priority)
                metadata:
                  type: object
                  description: Additional metadata for conversion
              required:
                - file
      responses:
        '201':
          description: Conversion job created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionJob'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '413':
          description: File too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/RateLimited'

  /jobs/{jobId}:
    get:
      summary: Get conversion job
      description: Get details of a specific conversion job
      parameters:
        - name: jobId
          in: path
          required: true
          description: Job ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Conversion job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionJob'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimited'

    delete:
      summary: Cancel conversion job
      description: Cancel a pending or running conversion job
      parameters:
        - name: jobId
          in: path
          required: true
          description: Job ID
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Job cancelled successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Job cannot be cancelled (already completed)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/RateLimited'

  /jobs/{jobId}/download:
    get:
      summary: Download converted EPUB
      description: Download the converted EPUB file
      parameters:
        - name: jobId
          in: path
          required: true
          description: Job ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: EPUB file
          content:
            application/epub+zip:
              schema:
                type: string
                format: binary
          headers:
            Content-Disposition:
              schema:
                type: string
              description: Attachment filename
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Job not completed yet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/RateLimited'

  /queue/status:
    get:
      summary: Get queue status
      description: Get current conversion queue status
      responses:
        '200':
          description: Queue status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  pending_jobs:
                    type: integer
                    description: Number of jobs waiting to be processed
                  running_jobs:
                    type: integer
                    description: Number of jobs currently being processed
                  queue_size:
                    type: integer
                    description: Total jobs in queue (pending + running)
                  estimated_wait_time:
                    type: integer
                    description: Estimated wait time in seconds for new jobs
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

  /webhooks:
    get:
      summary: List webhook endpoints
      description: Get list of configured webhook endpoints
      responses:
        '200':
          description: List of webhook endpoints
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WebhookEndpoint'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

    post:
      summary: Create webhook endpoint
      description: Register a new webhook endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                  description: Webhook endpoint URL
                secret:
                  type: string
                  description: Secret for HMAC signature verification
                events:
                  type: array
                  items:
                    type: string
                    enum: [job.created, job.running, job.completed, job.failed]
                  description: Events to receive notifications for
                headers:
                  type: object
                  description: Additional headers to send with webhook
              required:
                - url
      responses:
        '201':
          description: Webhook endpoint created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpoint'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    ConversionJob:
      type: object
      properties:
        job_id:
          type: string
          format: uuid
          description: Unique job identifier
        input_file_path:
          type: string
          description: Path to input file
        output_file_path:
          type: string
          description: Path to output file (when completed)
        input_format:
          type: string
          enum: [docx, md, html, txt]
          default: docx
          description: Input file format
        output_format:
          type: string
          enum: [epub]
          default: epub
          description: Output file format
        status:
          type: string
          enum: [pending, running, completed, failed]
          description: Current job status
        created_at:
          type: string
          format: date-time
          description: Job creation timestamp
        started_at:
          type: string
          format: date-time
          description: Job start timestamp
        completed_at:
          type: string
          format: date-time
          description: Job completion timestamp
        error_message:
          type: string
          description: Error message (if failed)
        metadata:
          type: object
          description: Additional job metadata
        user_id:
          type: string
          description: User who created the job
        priority:
          type: integer
          minimum: 1
          maximum: 10
          description: Job priority
        progress_percent:
          type: number
          minimum: 0
          maximum: 100
          description: Completion percentage
        file_size_bytes:
          type: integer
          description: Input file size in bytes
        estimated_duration_seconds:
          type: number
          description: Estimated processing duration

    WebhookEndpoint:
      type: object
      properties:
        id:
          type: integer
          description: Webhook endpoint ID
        url:
          type: string
          format: uri
          description: Webhook URL
        events:
          type: array
          items:
            type: string
          description: Events to notify
        enabled:
          type: boolean
          description: Whether webhook is enabled
        retry_count:
          type: integer
          description: Number of retries on failure
        timeout_seconds:
          type: integer
          description: Request timeout in seconds

    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
          description: Overall health status
        message:
          type: string
          description: Health status message
        timestamp:
          type: string
          format: date-time
          description: Health check timestamp
        checks:
          type: object
          description: Individual health check results
          additionalProperties:
            type: object
            properties:
              healthy:
                type: boolean
              message:
                type: string
              details:
                type: object

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error type
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Error timestamp

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
          description: Request limit per minute
        X-RateLimit-Remaining:
          schema:
            type: integer
          description: Remaining requests in current window
        X-RateLimit-Reset:
          schema:
            type: integer
          description: Unix timestamp when rate limit resets